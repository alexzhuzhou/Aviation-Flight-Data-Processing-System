package com.example.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Represents a route element in a predicted flight path
 * Contains position, speed, timing and identification information
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class RouteElement {
    
    private double latitude;
    private double speedMeterPerSecond;
    private double eetMinutes;
    private long id;
    private String indicative;
    private double levelMeters;
    private String elementType;
    private String coordinateText;
    private double longitude;
    
    // Additional fields for densification support
    private int sequenceNumber;
    private double altitude; // in feet
    private double speed; // in knots
    private boolean interpolated = false; // marks if this point was generated by densification
    
    // Default constructor
    public RouteElement() {}
    
    // Constructor with all fields
    public RouteElement(double latitude, double speedMeterPerSecond, double eetMinutes, 
                       long id, String indicative, double levelMeters, String elementType, 
                       String coordinateText, double longitude) {
        this.latitude = latitude;
        this.speedMeterPerSecond = speedMeterPerSecond;
        this.eetMinutes = eetMinutes;
        this.id = id;
        this.indicative = indicative;
        this.levelMeters = levelMeters;
        this.elementType = elementType;
        this.coordinateText = coordinateText;
        this.longitude = longitude;
    }
    
    // Getters and setters
    public double getLatitude() { return latitude; }
    public void setLatitude(double latitude) { this.latitude = latitude; }
    
    public double getSpeedMeterPerSecond() { return speedMeterPerSecond; }
    public void setSpeedMeterPerSecond(double speedMeterPerSecond) { this.speedMeterPerSecond = speedMeterPerSecond; }
    
    public double getEetMinutes() { return eetMinutes; }
    public void setEetMinutes(double eetMinutes) { this.eetMinutes = eetMinutes; }
    
    public long getId() { return id; }
    public void setId(long id) { this.id = id; }
    
    public String getIndicative() { return indicative; }
    public void setIndicative(String indicative) { this.indicative = indicative; }
    
    public double getLevelMeters() { return levelMeters; }
    public void setLevelMeters(double levelMeters) { this.levelMeters = levelMeters; }
    
    public String getElementType() { return elementType; }
    public void setElementType(String elementType) { this.elementType = elementType; }
    
    public String getCoordinateText() { return coordinateText; }
    public void setCoordinateText(String coordinateText) { this.coordinateText = coordinateText; }
    
    public double getLongitude() { return longitude; }
    public void setLongitude(double longitude) { this.longitude = longitude; }
    
    // Additional getters and setters for densification support
    public int getSequenceNumber() { return sequenceNumber; }
    public void setSequenceNumber(int sequenceNumber) { this.sequenceNumber = sequenceNumber; }
    
    public double getAltitude() { return altitude; }
    public void setAltitude(double altitude) { this.altitude = altitude; }
    
    public double getSpeed() { return speed; }
    public void setSpeed(double speed) { this.speed = speed; }
    
    public boolean isInterpolated() { return interpolated; }
    public void setInterpolated(boolean interpolated) { this.interpolated = interpolated; }
    
    @Override
    public String toString() {
        return "RouteElement{" +
                "latitude=" + latitude +
                ", speedMeterPerSecond=" + speedMeterPerSecond +
                ", eetMinutes=" + eetMinutes +
                ", id=" + id +
                ", indicative='" + indicative + '\'' +
                ", levelMeters=" + levelMeters +
                ", elementType='" + elementType + '\'' +
                ", coordinateText='" + coordinateText + '\'' +
                ", longitude=" + longitude +
                ", sequenceNumber=" + sequenceNumber +
                ", altitude=" + altitude +
                ", speed=" + speed +
                ", interpolated=" + interpolated +
                '}';
    }
}